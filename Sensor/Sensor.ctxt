#BlueJ class context
comment0.params=pin
comment0.target=Sensor(com.pi4j.io.gpio.Pin)
comment0.text=\n\ Constructor\ for\ objects\ of\ class\ Sensor\n\ @param\ pin\ The\ location\ of\ the\ gpio\ pin\n
comment1.params=
comment1.target=com.pi4j.io.gpio.PinState\ getOverallState()
comment10.params=debounce
comment10.target=void\ setDebounce(int)
comment10.text=\n\ sets\ debounce\ interval\ in\ seconds\ for\ all\ states\n\ @param\ debounce\ Debounce\ interval\ to\ set\n
comment11.params=debounce\ state
comment11.target=void\ setDebounce(int,\ com.pi4j.io.gpio.PinState[])
comment11.text=\n\ sets\ debounce\ interval\ in\ seconds\ for\ a\ specific\ state\n\ @param\ debounce\ Debounce\ interval\ to\ set\n\ @param\ state\ State\ to\ set\ debounce\ interval\ for\n
comment12.params=testTime
comment12.target=void\ logChanges(int)
comment12.text=\n\ Logs\ when\ the\ sensor\ changes\ states\n\ @param\ testTime\ Seconds\ tests\ runs\ for\n
comment13.params=event
comment13.target=void\ handleGpioPinDigitalStateChangeEvent(com.pi4j.io.gpio.event.GpioPinDigitalStateChangeEvent)
comment14.params=testTime
comment14.target=void\ logStates(int)
comment14.text=\n\ Logs\ state\ of\ Sensor\ every\ two\ seconds\n\ @param\ testTime\ Seconds\ tests\ runs\ for\n
comment2.params=state
comment2.target=void\ setOverallState(com.pi4j.io.gpio.PinState)
comment3.params=
comment3.target=boolean\ getTimerState()
comment4.params=
comment4.target=com.pi4j.io.gpio.PinState\ getState()
comment4.text=\n\ returns\ state\ of\ sensor\n
comment5.params=
comment5.target=boolean\ isLow()
comment5.text=\n\ returns\ if\ sensor\ is\ low\n
comment6.params=
comment6.target=boolean\ isHigh()
comment6.text=\n\ returns\ if\ sensor\ is\ high\n
comment7.params=state
comment7.target=boolean\ isState(com.pi4j.io.gpio.PinState)
comment7.text=\n\ returns\ if\ sensor\ state\ is\ state\ given\n\ @param\ state\ Is\ it\ this\ state\n
comment8.params=state
comment8.target=boolean\ hasDebounce(com.pi4j.io.gpio.PinState)
comment8.text=\n\ determines\ if\ pin\ state\ has\ a\ debounce\ interval\n\ @param\ state\ The\ pin\ state\ to\ test\ for\ debounce\ delay\n
comment9.params=state
comment9.target=int\ getDebounce(com.pi4j.io.gpio.PinState)
comment9.text=\n\ returns\ debounce\ interval\ of\ pin\ in\ milliseconds\n\ @param\ state\ The\ pin\ state\ to\ find\ debounce\ interval\n
numComments=15
